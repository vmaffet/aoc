0  addi 1 16 1  goto 17
1  seti 1 1  3  c = 1
2  seti 1 9  5  e = 1
3  mulr 3 5  2  b = c*e
4  eqrr 2 4  2  b = b == d
5  addr 2 1  1  jump b
6  addi 1 1  1  jump
7  addr 3 0  0  a += c      //result, count when c*e = d
8  addi 5 1  5  e += 1      //increment e from 1 to d
9  gtrr 5 4  2  b = e > d   
10 addr 1 2  1  jump b
11 seti 2 6  1  goto 3      
12 addi 3 1  3  c += 1      //when reached increment c
13 gtrr 3 4  2  b = c > d   
14 addr 2 1  1  jump b      //stop when c has reached d
15 seti 1 6  1  goto 2
16 mulr 1 1  1  goto 64     //END => result is sum of divisors of d
17 addi 4 2  4  d += 2      // Generation of d
18 mulr 4 4  4  d = d**2
19 mulr 1 4  4  d *= 19
20 muli 4 11 4  d *= 11
21 addi 2 6  2  b += 6
22 mulr 2 1  2  b *= 22
23 addi 2 2  2  b += 2
24 addr 4 2  4  d += b
25 addr 1 0  1  jump a
26 seti 0 3  1  goto 1       // first part
27 setr 1 4  2  b = 27
28 mulr 2 1  2  b *= 28
29 addr 1 2  2  b += 29
30 mulr 1 2  2  b *= 30
31 muli 2 14 2  b *= 14
32 mulr 2 1  2  b *= 32
33 addr 4 2  4  d += b
34 seti 0 0  0  a = 0
35 seti 0 4  1  goto 1       // second part
